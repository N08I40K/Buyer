plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'java'
}

group = 'ru.n08i40k'
version = '1.1'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven { // item nbt api
        name = "CodeMC"
        url = "https://repo.codemc.org/repository/maven-public/"
    }
    maven { // decent-holograms
        name = "jitpack"
        url = "https://jitpack.io/"
    }
    maven {
        name = "enginehub"
        url "https://maven.enginehub.org/repo/"
    }
    maven { // orbit
        name = "meteor-maven"
        url = "https://maven.meteordev.org/releases"
    }
    maven {
        name = "local"
        url = "file://\\C:\\Users\\n08i40k\\.m2\\repository"
    }
}

dependencies {
    compileOnly "com.destroystokyo.paper:paper-api:1.16.5-R0.1-SNAPSHOT"

    // Plugins api
    compileOnly 'de.tr7zw:item-nbt-api-plugin:2.12.0'
    compileOnly "com.github.MilkBowl:VaultAPI:1.7"

    // My libs
    implementation 'ru.n08i40k:npluginlocale:1.1'
    implementation 'ru.n08i40k:npluginconfig:1.1'

    // Libs
    implementation "meteordevelopment:orbit:0.2.3"
    implementation 'org.yaml:snakeyaml:2.2'

    // LomBok
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
}

shadowJar {
    ext.myRelocate = { String libPackage ->
        String toLib = libPackage

        if (libPackage.contains('.'))
            toLib = libPackage.split("\\.").last()

        print("relocating ${libPackage} to ${project.group}.${project.name.toLowerCase()}.deps.${toLib}\n")
        relocate(libPackage, "${project.group}.${project.name}.deps.${toLib}")
    }

    myRelocate("org.yaml")
    myRelocate("meteordevelopment")
    myRelocate("ru.n08i40k.npluginlocale")
    myRelocate("ru.n08i40k.npluginconfig")
}

jar.dependsOn("shadowJar")

sourceCompatibility = 16
targetCompatibility = 16

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}